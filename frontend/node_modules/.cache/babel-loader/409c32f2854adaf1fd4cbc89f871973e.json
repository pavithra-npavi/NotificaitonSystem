{"ast":null,"code":"var _jsxFileName = \"/home/dell/inerview/unit4/src/Context/AppProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  dark: {\n    color: \"#FFFFF\",\n    background: \"#121212\"\n  },\n  light: {\n    color: \"#121212\",\n    background: \"#FFFF\"\n  }\n};\nexport const AppContext = /*#__PURE__*/createContext();\n\nfunction AppProvider(props) {\n  _s();\n\n  const [appTheme, setAppTheme] = React.useState(theme.light);\n\n  const setDark = () => setAppTheme(theme.dark);\n\n  const setLight = () => setAppTheme(theme.light);\n\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    value: presentTheme,\n    children: [\" \", props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AppProvider, \"N2r2/JOVzqAPJybuZ2a1vHLIcEg=\");\n\n_c = AppProvider;\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/dell/inerview/unit4/src/Context/AppProvider.jsx"],"names":["React","createContext","theme","dark","color","background","light","AppContext","AppProvider","props","appTheme","setAppTheme","useState","setDark","setLight","presentTheme","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;AAGA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAG;AACHC,IAAAA,KAAK,EAAE,QADJ;AAEPC,IAAAA,UAAU,EAAG;AAFN,GADG;AAKVC,EAAAA,KAAK,EAAG;AACHF,IAAAA,KAAK,EAAG,SADL;AAERC,IAAAA,UAAU,EAAG;AAFL;AALE,CAAd;AAWA,OAAO,MAAME,UAAU,gBAAGN,aAAa,EAAhC;;AAIP,SAASO,WAAT,CAAqBC,KAArB,EAA2B;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BX,KAAK,CAACY,QAAN,CAAeV,KAAK,CAACI,KAArB,CAAjC;;AAEA,QAAMO,OAAO,GAAG,MAAIF,WAAW,CAACT,KAAK,CAACC,IAAP,CAA/B;;AACA,QAAMW,QAAQ,GAAE,MAAIH,WAAW,CAACT,KAAK,CAACI,KAAP,CAA/B;;AAEA,sBAAO,QAAC,WAAD;AAAa,IAAA,KAAK,EAAIS,YAAtB;AAAA,oBAAsCN,KAAK,CAACO,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAPQR,W;;KAAAA,W;AAST,eAAeA,WAAf","sourcesContent":["import React, { createContext } from \"react\"\n\n\nconst theme = {\n    dark : {\n        color: \"#FFFFF\" , \n    background : \"#121212\"\n},\n    light : {\n         color : \"#121212\" , \n    background : \"#FFFF\"\n}\n}\n\nexport const AppContext = createContext()\n\n\n\nfunction AppProvider(props){\n    const [appTheme , setAppTheme] = React.useState(theme.light)\n\n    const setDark = ()=>setAppTheme(theme.dark)\n    const setLight= ()=>setAppTheme(theme.light)\n    \n    return <AppProvider value = {presentTheme}> {props.children}</AppProvider>\n}\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}