{"ast":null,"code":"var _jsxFileName = \"/home/dell/inerview/unit4/src/Components/GroceryList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFetch, postGrocery } from \"../Hooks/useFetch\";\nimport { GroceryItem } from \"./GroceryItem\";\nimport axios from \"axios\";\nimport { Dialog, Button, DialogTitle, DialogActions, DialogContent, DialogContentText, makeStyles, TextField } from \"@material-ui/core\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroceryList = () => {\n  _s();\n\n  const initState = {\n    product_name: \"\",\n    stock_available: true,\n    quantity: \"\",\n    price: \"\"\n  };\n  const [postData, setPostData] = React.useState(initState);\n  const {\n    isLoading,\n    isError,\n    data\n  } = useFetch(`https://json-server-pavithra.herokuapp.com/grocery`);\n  const {\n    product_name,\n    quantity,\n    price\n  } = postData;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPostData({ ...postData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let payload = {\n      product_name: postData.product_name,\n      quantity: postData.quantity,\n      price: postData.price,\n      id: Date.now(),\n      stock_available: true\n    };\n    console.log(payload);\n    postGrocery(\"https://json-server-pavithra.herokuapp.com/grocery\", payload);\n    axios.post(\"https://json-server-pavithra.herokuapp.com/grocery\", payload).then(res => {\n      console.log(res.data);\n      handleClickOpen();\n    });\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const useStyles = makeStyles({\n    div: {\n      border: \"3px solid purple\",\n      width: \"350px\",\n      margin: \"50px\",\n      padding: \"20px\",\n      color: \"white\"\n    },\n    button: {\n      margin: \"10px\"\n    },\n    indicator: {\n      margin: \"50px\"\n    }\n  });\n  let classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" GROCERY LIST \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        name: \"product_name\",\n        id: \"product_name\",\n        value: product_name,\n        onChange: handleChange,\n        variant: \"outlined\",\n        label: \"Enter Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        name: \"quantity\",\n        id: \"quantity\",\n        value: quantity,\n        onChange: handleChange,\n        variant: \"outlined\",\n        label: \"Enter Product Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        name: \"price\",\n        id: \"price\",\n        value: price,\n        onChange: handleChange,\n        variant: \"outlined\",\n        label: \"Enter Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \" A D D Grocery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Press Yes to Add Items ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Are you Sure to Add the Grocery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      calssName: classes.indicator,\n      children: [\" \", /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(GroceryItem, { ...item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true);\n};\n\n_s(GroceryList, \"WrWFXTCKONpWNcECKCcq5fU+bYs=\", true, function () {\n  return [useFetch];\n});\n\n_c = GroceryList;\nexport { GroceryList };\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"sources":["/home/dell/inerview/unit4/src/Components/GroceryList.jsx"],"names":["React","useFetch","postGrocery","GroceryItem","axios","Dialog","Button","DialogTitle","DialogActions","DialogContent","DialogContentText","makeStyles","TextField","CircularProgress","GroceryList","initState","product_name","stock_available","quantity","price","postData","setPostData","useState","isLoading","isError","data","handleChange","e","name","value","target","handleSubmit","preventDefault","payload","id","Date","now","console","log","post","then","res","handleClickOpen","open","setOpen","handleClose","useStyles","div","border","width","margin","padding","color","button","indicator","classes","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFetch, postGrocery } from \"../Hooks/useFetch\";\nimport { GroceryItem } from \"./GroceryItem\";\nimport axios from \"axios\";\nimport {\n  Dialog,\n  Button,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  makeStyles,\n  TextField\n} from \"@material-ui/core\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst GroceryList = () => {\n  const initState = {\n    product_name: \"\",\n    stock_available: true,\n    quantity: \"\",\n    price: \"\",\n  };\n\n  const [postData, setPostData] = React.useState(initState);\n  const { isLoading, isError, data } = useFetch(\n    `https://json-server-pavithra.herokuapp.com/grocery`\n  );\n\n  const { product_name, quantity, price } = postData;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPostData({ ...postData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let payload = {\n      product_name: postData.product_name,\n      quantity: postData.quantity,\n      price: postData.price,\n      id: Date.now(),\n      stock_available: true,\n    };\n    console.log(payload);\n    postGrocery(\"https://json-server-pavithra.herokuapp.com/grocery\", payload);\n    axios\n      .post(\"https://json-server-pavithra.herokuapp.com/grocery\", payload)\n      .then((res) => {\n        console.log(res.data);\n        handleClickOpen();\n      });\n  };\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const useStyles = makeStyles({\n    div: {\n      border: \"3px solid purple\",\n      width: \"350px\",\n      margin: \"50px\",\n      padding: \"20px\",\n      color: \"white\",\n    },\n    button:{\n        margin:\"10px\"\n    },\n    indicator:{\n        margin:\"50px\"\n    }\n  });\n  let classes = useStyles();\n\n  return (\n    <>\n      <h4> GROCERY LIST </h4>\n\n      <form onSubmit={handleSubmit}>\n        <TextField\n          type=\"text\"\n          name=\"product_name\"\n          id=\"product_name\"\n          value={product_name}\n          onChange={handleChange}\n          variant=\"outlined\"\n          label=\"Enter Product Name\"\n        />\n      {\" \"}\n        <TextField\n          type=\"text\"\n          name=\"quantity\"\n          id=\"quantity\"\n          value={quantity}\n          onChange={handleChange}\n          variant=\"outlined\"\n          label=\"Enter Product Quantity\"\n        />\n       {\" \"}\n        <TextField\n          type=\"text\"\n          name=\"price\"\n          id=\"price\"\n          value={price}\n          onChange={handleChange}\n          variant=\"outlined\"\n          label=\"Enter Product Price\"\n        />\n        <Button className = {classes.button} variant=\"contained\" color=\"primary\"> A D D Grocery </Button>\n      </form>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Press Yes to Add Items ?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you Sure to Add the Grocery\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Yes\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n      {isLoading ? (\n        <div calssName ={classes.indicator}> <CircularProgress /></div>\n      ) : isError ? (\n        <div> Error....</div>\n      ) : (\n        data?.map((item) => <GroceryItem key={item.id} {...item} />)\n      )}\n    </>\n  );\n};\n\nexport { GroceryList };\n"]},"metadata":{},"sourceType":"module"}