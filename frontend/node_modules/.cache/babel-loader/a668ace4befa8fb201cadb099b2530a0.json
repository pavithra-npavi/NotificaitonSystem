{"ast":null,"code":"var _jsxFileName = \"/home/dell/inerview/unit4/src/Component/StarFetch.jsx\",\n    _s = $RefreshSig$();\n\nimport { getDefaultNormalizer } from \"@testing-library/dom\";\nimport React from \"react\";\nimport { useState, useHistory } from \"react\";\nimport { useDebouncer, useFetch } from \"../CustomHooks/useHooks\";\nimport \"./StarFetch.css\";\nimport StarCard from \"./StarCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StarFetch = () => {\n  _s();\n\n  var _data$results;\n\n  const [query, setQuery] = useState(\"\");\n  const debouncedQuery = useDebouncer(query, 500); // const {isLoading, isError, data} = useFetch(`https://api.github.com/search/users?q=${debouncedQuery || \"masai\"}`)\n\n  const {\n    isLoading,\n    isError,\n    data\n  } = useFetch(`https://swapi.dev/api/people/?search=${debouncedQuery || \"luke\"}`);\n\n  const handleData = name => {\n    console.log(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star wars Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Error... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this) : // data.results && data.results?.map((item, index)=><p key={item.url} onMouseOver={() => setActive(index + 1)}> {item.name}  hey\n      // </p>\n      // )\n      data.results && ((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map((item, index) => /*#__PURE__*/_jsxDEV(StarCard, {\n        handleData: handleData,\n        item: item\n      }, item.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StarFetch, \"JrtVUGDdtqS6jRpXVYj0IO7mqdc=\", false, function () {\n  return [useDebouncer, useFetch];\n});\n\n_c = StarFetch;\nexport default StarFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarFetch\");","map":{"version":3,"sources":["/home/dell/inerview/unit4/src/Component/StarFetch.jsx"],"names":["getDefaultNormalizer","React","useState","useHistory","useDebouncer","useFetch","StarCard","StarFetch","query","setQuery","debouncedQuery","isLoading","isError","data","handleData","name","console","log","e","target","value","results","map","item","index","url"],"mappings":";;;AAAA,SAASA,oBAAT,QAAqC,sBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,yBAAvC;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AACA,MAAMC,SAAS,GAAE,MAAI;AAAA;;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,cAAc,GAAGN,YAAY,CAACI,KAAD,EAAQ,GAAR,CAAnC,CAJiB,CAKjB;;AACA,QAAM;AAACG,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA6BR,QAAQ,CAAE,wCAAuCK,cAAc,IAAI,MAAO,EAAlE,CAA3C;;AAEA,QAAMI,UAAU,GAAGC,IAAD,IAAQ;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAII,sBACI;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,EAAxB;AAA2B,MAAA,EAAE,EAAC,EAA9B;AAAiC,MAAA,KAAK,EAAGP,KAAzC;AAAgD,MAAA,QAAQ,EAAIU,CAAD,IAAKT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA,gBAEIT,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GACPC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAET;AACA;AAEA;AACAC,MAAAA,IAAI,CAACQ,OAAL,sBAAgBR,IAAI,CAACQ,OAArB,kDAAgB,cAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAClC,QAAC,QAAD;AAA0B,QAAA,UAAU,EAAEV,UAAtC;AAAkD,QAAA,IAAI,EAAES;AAAxD,SAAeA,IAAI,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA,cADgB,CAAhB;AATJ;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAsBP,CAlCD;;GAAMlB,S;UAIqBH,Y,EAEYC,Q;;;KANjCE,S;AAoCN,eAAeA,SAAf","sourcesContent":["import { getDefaultNormalizer } from \"@testing-library/dom\"\nimport React from \"react\"\nimport {useState, useHistory} from \"react\"\nimport { useDebouncer, useFetch } from \"../CustomHooks/useHooks\"\nimport \"./StarFetch.css\"\nimport StarCard from \"./StarCard\"\nconst StarFetch =()=>{\n\n    const [query, setQuery] = useState(\"\")\n   \n    const debouncedQuery = useDebouncer(query, 500)\n    // const {isLoading, isError, data} = useFetch(`https://api.github.com/search/users?q=${debouncedQuery || \"masai\"}`)\n    const {isLoading, isError, data} = useFetch(`https://swapi.dev/api/people/?search=${debouncedQuery || \"luke\"}`)\n   \n    const handleData =(name)=>{\n        console.log(name);\n    }\n    \n        return (\n            <>\n    \n            <h1>Star wars Search</h1>\n            <input type=\"text\" name=\"\" id=\"\" value= {query} onChange ={(e)=>setQuery(e.target.value)}/>\n            <div  id=\"container\">\n            {\n                isLoading ? <div> Loading...</div>\n                : isError ? <div> Error... </div>\n                :\n                // data.results && data.results?.map((item, index)=><p key={item.url} onMouseOver={() => setActive(index + 1)}> {item.name}  hey\n                // </p>\n                \n                // )\n                data.results && data.results?.map((item, index)=>\n                <StarCard key={item.url}  handleData={handleData} item={item} />\n                \n                )\n            }\n            </div>\n            </>\n        )\n}\n\nexport default StarFetch;"]},"metadata":{},"sourceType":"module"}