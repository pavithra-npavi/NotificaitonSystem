{"ast":null,"code":"var _jsxFileName = \"/home/dell/BAckEND/w3_d4_auth_backend/frontend/src/Components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport Branch from \"./Branch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Socket = io.connect(\"http://localhost:8000\");\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [pincode, setPincode] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [branch, setBranch] = useState(false);\n\n  function performValidation() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(pincode);\n    getData();\n  }\n\n  const getData = () => {\n    axios.get(\"https://json-server-pavithra.herokuapp.com/beetlenutdata\").then(res => {\n      setData(res.data);\n      filtering(data);\n    });\n  }; // console.log(data)\n\n\n  const filtering = data => {\n    var obj = {};\n    var list = data.filter(item => item[\"Pincodecovered\"].split(\", \").filter(item => item == pincode).join(\"\") == pincode);\n    setResult(list);\n\n    for (let i = 0; i < list.length; i++) {\n      obj[list[i][\"BranchName\"]] = false;\n    }\n\n    Socket.emit(\"notification\", {\n      username,\n      pincode,\n      branch: true,\n      ...obj\n    });\n  };\n\n  useEffect(() => {\n    // getData()\n    Socket.on(\"notification\", pincode => {\n      setMessage([...pincode]);\n    });\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Pincode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: pincode,\n          onChange: e => setPincode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          block: true,\n          bsSize: \"large\",\n          disabled: !performValidation(),\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), branch && /*#__PURE__*/_jsxDEV(Branch, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }, this), result && result.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item[\"BranchName\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 34\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Login, \"M+qjyBnApZnOXSroo1HseTbw3AY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dell/BAckEND/w3_d4_auth_backend/frontend/src/Components/Login.jsx"],"names":["React","useState","useEffect","axios","io","Branch","Socket","connect","Login","username","setUsername","password","setPassword","data","setData","pincode","setPincode","message","setMessage","result","setResult","branch","setBranch","performValidation","length","handleSubmit","event","preventDefault","console","log","getData","get","then","res","filtering","obj","list","filter","item","split","join","i","emit","on","e","target","value","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,OAAO,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;;AACP,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAEc,OAAF,EAAWC,UAAX,IAAyBf,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAEgB,OAAF,EAAWC,UAAX,IAAyBjB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAEkB,MAAF,EAAUC,SAAV,IAAuBnB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;;AACA,WAASsB,iBAAT,GAA6B;AAC3B,WAAOd,QAAQ,CAACe,MAAT,GAAkB,CAAlB,IAAuBb,QAAQ,CAACa,MAAT,GAAkB,CAAhD;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACAe,IAAAA,OAAO;AAER;;AAED,QAAMA,OAAO,GAAE,MAAI;AAChB3B,IAAAA,KAAK,CAAC4B,GAAN,CAAU,0DAAV,EACAC,IADA,CACMC,GAAD,IAAO;AACXnB,MAAAA,OAAO,CAACmB,GAAG,CAACpB,IAAL,CAAP;AACAqB,MAAAA,SAAS,CAACrB,IAAD,CAAT;AAAgB,KAHjB;AAKF,GAND,CAnBkB,CA2BlB;;;AAEA,QAAMqB,SAAS,GAAGrB,IAAD,IAAQ;AACvB,QAAIsB,GAAG,GAAG,EAAV;AACA,QAAIC,IAAI,GAAGvB,IAAI,CAACwB,MAAL,CAAaC,IAAD,IAAQA,IAAI,CAAC,gBAAD,CAAJ,CAAuBC,KAAvB,CAA6B,IAA7B,EAAmCF,MAAnC,CAA2CC,IAAD,IAAQA,IAAI,IAAIvB,OAA1D,EAAmEyB,IAAnE,CAAwE,EAAxE,KAA6EzB,OAAjG,CAAX;AACAK,IAAAA,SAAS,CAACgB,IAAD,CAAT;;AACA,SAAI,IAAIK,CAAC,GAAE,CAAX,EAAeA,CAAC,GAACL,IAAI,CAACZ,MAAtB,EAA8BiB,CAAC,EAA/B,EACA;AACEN,MAAAA,GAAG,CAACC,IAAI,CAACK,CAAD,CAAJ,CAAQ,YAAR,CAAD,CAAH,GAA6B,KAA7B;AACD;;AACDnC,IAAAA,MAAM,CAACoC,IAAP,CAAY,cAAZ,EAA4B;AAACjC,MAAAA,QAAD;AAAUM,MAAAA,OAAV;AAAkBM,MAAAA,MAAM,EAAC,IAAzB;AAA8B,SAAGc;AAAjC,KAA5B;AACD,GATD;;AAWAjC,EAAAA,SAAS,CAAC,MAAI;AACZ;AACAI,IAAAA,MAAM,CAACqC,EAAP,CAAU,cAAV,EAAyB5B,OAAO,IAAE;AAChCG,MAAAA,UAAU,CAAC,CAAC,GAAGH,OAAJ,CAAD,CAAV;AACD,KAFD;AAGD,GALQ,EAKP,CAACE,OAAD,CALO,CAAT;AAQA,sBACE;AAAA,4BACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eACO;AAAA;AAAA;AAAA;AAAA,cADP,eAEE;AAAM,QAAA,QAAQ,EAAEQ,YAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,MADX;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,KAAK,EAAEhB,QAHT;AAIE,UAAA,QAAQ,EAAGmC,CAAD,IAAOlC,WAAW,CAACkC,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBAFF,oBAOK;AAAA;AAAA;AAAA;AAAA,gBAPL,eAOU;AAAA;AAAA;AAAA;AAAA,gBAPV,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AACE,UAAA,KAAK,EAAEnC,QADT;AAEE,UAAA,QAAQ,EAAGiC,CAAD,IAAOhC,WAAW,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBATF,oBAaK;AAAA;AAAA;AAAA;AAAA,gBAbL,eAaU;AAAA;AAAA;AAAA;AAAA,gBAbV,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE/B,OAA1B;AAAmC,UAAA,QAAQ,EAAG6B,CAAD,IAAK5B,UAAU,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBF;AAAA;AAAA;AAAA;AAAA,gBAhBE,eAgBG;AAAA;AAAA;AAAA;AAAA,gBAhBH,eAiBE;AACE,UAAA,KAAK,MADP;AAEE,UAAA,MAAM,EAAC,OAFT;AAGE,UAAA,QAAQ,EAAE,CAACvB,iBAAiB,EAH9B;AAIE,UAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAmCDF,MAAM,iBAAI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAnCT,EAqCEE,MAAM,IAAEA,MAAM,CAAC4B,GAAP,CAAYT,IAAD,iBAAQ;AAAA,gBAAIA,IAAI,CAAC,YAAD;AAAR;AAAA;AAAA;AAAA;AAAA,YAAnB,CArCV;AAAA,kBADF;AA0CD,CA1FD;;GAAM9B,K;;KAAAA,K;AA4FN,eAAeA,KAAf","sourcesContent":["import React, { useState ,useEffect} from \"react\";\nimport axios from \"axios\"\nimport {io} from \"socket.io-client\"\nimport Branch from \"./Branch\";\nexport const Socket = io.connect(\"http://localhost:8000\")\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState([])\n  const [ pincode, setPincode] = useState([])\n  const [ message, setMessage] = useState(\"\")\n  const [ result, setResult] = useState([])\n  const [branch, setBranch] = useState(false)\n  function performValidation() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(pincode)\n    getData()\n    \n  }\n\n  const getData =()=>{\n     axios.get(\"https://json-server-pavithra.herokuapp.com/beetlenutdata\")\n    .then((res)=>{\n      setData(res.data)\n      filtering(data)})\n  \n  }\n\n  // console.log(data)\n\n  const filtering =(data)=>{\n    var obj = {}\n    var list = data.filter((item)=>item[\"Pincodecovered\"].split(\", \").filter((item)=>item == pincode).join(\"\")==pincode)\n    setResult(list)\n    for(let i =0 ; i<list.length; i++)\n    {\n      obj[list[i][\"BranchName\"]] = false;\n    }\n    Socket.emit(\"notification\",({username,pincode,branch:true,...obj}))\n  }\n\n  useEffect(()=>{\n    // getData()\n    Socket.on(\"notification\",pincode=>{\n      setMessage([...pincode])\n    })\n  },[message])\n\n\n  return (\n    <>\n    <div>\n      <br/><br/>\n      <form onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input\n          autoFocus\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        /> <br/><br/>\n        <label>Password</label>\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        /> <br/><br/>\n        <label>Pincode</label>\n        <input type=\"text\" value={pincode} onChange={(e)=>setPincode(e.target.value)}/>\n    <br/><br/>\n        <button\n          block\n          bsSize=\"large\"\n          disabled={!performValidation()}\n          type=\"submit\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n    {/* <div>\n      {\n        data?.filter(item=>item.Pincodecovered.split(\",\").filter(item=> item === item.Pincodecovered).join(\"\")==pincode).map(item=><p key={item.BranchIncharge}>{item.BranchName}hey</p>)\n      }\n    </div> */}\n  {branch && <Branch message={message}/>}\n    {\n      result&&result.map((item)=><p>{item[\"BranchName\"]}</p>)\n    }\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}