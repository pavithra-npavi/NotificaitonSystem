{"ast":null,"code":"var _jsxFileName = \"/home/dell/inerview/unit4/src/Component/GitHubSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDebouncer, useFetch } from \"../CustomHooks/useHooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GitHubSearch = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const debouncedQuery = useDebouncer(query, 500);\n  const {\n    isLoading,\n    isError,\n    data\n  } = useFetch(`https://api.github.com/search/users?q=${debouncedQuery || \"masai\"}`);\n  console.log(data, \"data\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"GIT Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this) : data.items && data.items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", item.login]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 48\n    }, this))]\n  }, void 0, true);\n};\n\n_s(GitHubSearch, \"JrtVUGDdtqS6jRpXVYj0IO7mqdc=\", false, function () {\n  return [useDebouncer, useFetch];\n});\n\n_c = GitHubSearch;\nexport { GitHubSearch };\n\nvar _c;\n\n$RefreshReg$(_c, \"GitHubSearch\");","map":{"version":3,"sources":["/home/dell/inerview/unit4/src/Component/GitHubSearch.jsx"],"names":["React","useState","useDebouncer","useFetch","GitHubSearch","query","setQuery","debouncedQuery","isLoading","isError","data","console","log","e","target","value","items","map","item","login","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,yBAAvC;;;;AAEA,MAAMC,YAAY,GAAE,MAAI;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,cAAc,GAAGL,YAAY,CAACG,KAAD,EAAQ,GAAR,CAAnC;AACA,QAAM;AAACG,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA6BP,QAAQ,CAAE,yCAAwCI,cAAc,IAAI,OAAQ,EAApE,CAA3C;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAiB,MAAjB;AAGI,sBACI;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,EAAxB;AAA2B,MAAA,EAAE,EAAC,EAA9B;AAAiC,MAAA,KAAK,EAAGL,KAAzC;AAAgD,MAAA,QAAQ,EAAIQ,CAAD,IAAKP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,YAHA,EAMIP,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GACPC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAETC,IAAI,CAACM,KAAL,IAAcN,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAeC,IAAI,iBAAE;AAAA,sBAAmBA,IAAI,CAACC,KAAxB;AAAA,OAAQD,IAAI,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA,YAArB,CATlB;AAAA,kBADJ;AAgBH,CAzBD;;GAAMhB,Y;UAGiBF,Y,EACYC,Q;;;KAJ7BC,Y;AA2BN,SAAQA,YAAR","sourcesContent":["import React from \"react\"\nimport {useState} from \"react\"\nimport { useDebouncer, useFetch } from \"../CustomHooks/useHooks\"\n\nconst GitHubSearch =()=>{\n    \nconst [query, setQuery] = useState(\"\")\nconst debouncedQuery = useDebouncer(query, 500)\nconst {isLoading, isError, data} = useFetch(`https://api.github.com/search/users?q=${debouncedQuery || \"masai\"}`)\n\nconsole.log(data,\"data\")\n\n\n    return (\n        <>\n\n        <h1>GIT Search</h1>\n        <input type=\"text\" name=\"\" id=\"\" value= {query} onChange ={(e)=>setQuery(e.target.value)}/>\n\n        {\n            isLoading ? <div> Loading...</div>\n            : isError ? <div> Error... </div>\n            :\n            data.items && data.items.map(item=><p key={item.id}> {item.login}\n            \n            </p>)\n        }\n        </>\n    )\n}\n\nexport {GitHubSearch}"]},"metadata":{},"sourceType":"module"}