{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\n\nfunction useFetch(url) {\n  _s();\n\n  const [isLoading, setisLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n  const [data, setData] = React.useState([]);\n\n  const getData = url => {\n    setisLoading(true);\n    setIsError(false);\n    axios.get(url).then(res => {\n      setisLoading(false);\n      setData(res.data);\n      setIsError(false);\n    }).catch(err => {\n      setIsError(true);\n      setisLoading(false);\n    });\n  };\n\n  React.useEffect(() => {\n    getData(url);\n  }, [url]);\n  return {\n    isLoading,\n    isError,\n    data\n  };\n}\n\n_s(useFetch, \"1GtRBUVHRvTeMZ3VFedDxNoYuPk=\");\n\nexport { useFetch };","map":{"version":3,"sources":["/home/dell/inerview/unit4/src/Hooks/useFetch.jsx"],"names":["React","axios","useFetch","url","isLoading","setisLoading","useState","isError","setIsError","data","setData","getData","get","then","res","catch","err","useEffect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,CAAmBC,GAAnB,EAAuB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;;AAGA,QAAMK,OAAO,GAAGR,GAAD,IAAO;AAClBE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEAP,IAAAA,KAAK,CAACW,GAAN,CAAUT,GAAV,EACCU,IADD,CACMC,GAAG,IAAE;AACPT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAK,MAAAA,OAAO,CAACI,GAAG,CAACL,IAAL,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALD,EAMCO,KAND,CAMOC,GAAG,IAAE;AACRR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KATD;AAUH,GAdD;;AAgBAL,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAI;AAChBN,IAAAA,OAAO,CAACR,GAAD,CAAP;AACH,GAFD,EAEE,CAACA,GAAD,CAFF;AAIA,SAAO;AAACC,IAAAA,SAAD;AAAaG,IAAAA,OAAb;AAAsBE,IAAAA;AAAtB,GAAP;AACH;;GA3BQP,Q;;AA6BT,SAAQA,QAAR","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\n\n\nfunction useFetch (url){\n    const [isLoading, setisLoading] = React.useState(false)\n    const [isError, setIsError] = React.useState(false)\n    const [data, setData] = React.useState([])\n\n\n    const getData =(url)=>{\n        setisLoading(true)\n        setIsError(false)\n\n        axios.get(url)\n        .then(res=>{\n            setisLoading(false)\n            setData(res.data)\n            setIsError(false)\n        })\n        .catch(err=>{\n            setIsError(true)\n            setisLoading(false)\n        })\n    }\n\n    React.useEffect(()=>{\n        getData(url)\n    },[url])\n\n    return {isLoading , isError, data}\n}\n\nexport {useFetch}"]},"metadata":{},"sourceType":"module"}