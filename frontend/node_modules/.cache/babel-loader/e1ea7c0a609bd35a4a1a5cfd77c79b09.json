{"ast":null,"code":"var _jsxFileName = \"/home/dell/inerview/unit4/src/Component/StarFetch.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDebouncer, useFetch } from \"../CustomHooks/useHooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StarFetch = () => {\n  _s();\n\n  var _data$results;\n\n  const [query, setQuery] = useState(\"\");\n  const debouncedQuery = useDebouncer(query, 500); // const {isLoading, isError, data} = useFetch(`https://api.github.com/search/users?q=${debouncedQuery || \"masai\"}`)\n\n  const {\n    isLoading,\n    isError,\n    data\n  } = useFetch(`https://swapi.dev/api/people/?search=${debouncedQuery || \"luke\"}`);\n  console.log(data);\n\n  for (let i = 0; i < data.length; i++) {\n    console.log(data.results[i].name, \"data\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Star wars Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Error... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this) : data.results && ((_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", item.name, \"  hey\"]\n    }, item.url, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 62\n    }, this)))]\n  }, void 0, true);\n};\n\n_s(StarFetch, \"JrtVUGDdtqS6jRpXVYj0IO7mqdc=\", false, function () {\n  return [useDebouncer, useFetch];\n});\n\n_c = StarFetch;\nexport default StarFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarFetch\");","map":{"version":3,"sources":["/home/dell/inerview/unit4/src/Component/StarFetch.jsx"],"names":["React","useState","useDebouncer","useFetch","StarFetch","query","setQuery","debouncedQuery","isLoading","isError","data","console","log","i","length","results","name","e","target","value","map","item","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,yBAAvC;;;;AAEA,MAAMC,SAAS,GAAE,MAAI;AAAA;;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,cAAc,GAAGL,YAAY,CAACG,KAAD,EAAQ,GAAR,CAAnC,CAHiB,CAIjB;;AACA,QAAM;AAACG,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA6BP,QAAQ,CAAE,wCAAuCI,cAAc,IAAI,MAAO,EAAlE,CAA3C;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEI,OAAI,IAAIG,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EACA;AACIF,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACK,OAAL,CAAaF,CAAb,EAAgBG,IAA5B,EAAiC,MAAjC;AACH;;AAKD,sBACI;AAAA,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,EAAxB;AAA2B,MAAA,EAAE,EAAC,EAA9B;AAAiC,MAAA,KAAK,EAAGX,KAAzC;AAAgD,MAAA,QAAQ,EAAIY,CAAD,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxE;AAAA;AAAA;AAAA;AAAA,YAHA,EAMIX,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GACPC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAETC,IAAI,CAACK,OAAL,sBAAgBL,IAAI,CAACK,OAArB,kDAAgB,cAAcK,GAAd,CAAkB,CAACC,IAAD,EAAOR,CAAP,kBAAW;AAAA,sBAAoBQ,IAAI,CAACL,IAAzB;AAAA,OAAQK,IAAI,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA,YAA7B,CAAhB,CATJ;AAAA,kBADJ;AAiBP,CAlCD;;GAAMlB,S;UAGqBF,Y,EAEYC,Q;;;KALjCC,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React from \"react\"\nimport {useState} from \"react\"\nimport { useDebouncer, useFetch } from \"../CustomHooks/useHooks\"\n\nconst StarFetch =()=>{\n\n    const [query, setQuery] = useState(\"\")\n    const debouncedQuery = useDebouncer(query, 500)\n    // const {isLoading, isError, data} = useFetch(`https://api.github.com/search/users?q=${debouncedQuery || \"masai\"}`)\n    const {isLoading, isError, data} = useFetch(`https://swapi.dev/api/people/?search=${debouncedQuery || \"luke\"}`)\n    \n    console.log(data);\n\n        for(let i =0; i<data.length; i++)\n        {\n            console.log(data.results[i].name,\"data\");\n        }\n        \n    \n    \n    \n        return (\n            <>\n    \n            <h1>Star wars Search</h1>\n            <input type=\"text\" name=\"\" id=\"\" value= {query} onChange ={(e)=>setQuery(e.target.value)}/>\n    \n            {\n                isLoading ? <div> Loading...</div>\n                : isError ? <div> Error... </div>\n                :\n                data.results && data.results?.map((item, i)=><p key={item.url}> {item.name}  hey\n                </p>\n                \n                )\n            }\n            </>\n        )\n}\n\nexport default StarFetch;"]},"metadata":{},"sourceType":"module"}