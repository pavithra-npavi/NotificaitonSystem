{"ast":null,"code":"var _jsxFileName = \"/home/dell/BAckEND/w3_d4_auth_backend/frontend/src/Components/Branch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Branch = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [pincode, setPincode] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [auth, setAuth] = useState(true);\n\n  function performValidation() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getData();\n  }\n\n  const getData = () => {\n    axios.get(\"https://json-server-pavithra.herokuapp.com/branchlogin\").then(res => {\n      setData(res.data);\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i][\"BranchName\"] == username && data[i][\"Pincodecovered\"] == password) {\n          setAuth(true);\n          break;\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"!auth\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoFocus: true,\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          block: true,\n          bsSize: \"large\",\n          disabled: !performValidation(),\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), \":  \", result && result.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item[\"BranchName\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Branch, \"L5DJ6oOrWtedi/XscxQJlACaFhA=\");\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["/home/dell/BAckEND/w3_d4_auth_backend/frontend/src/Components/Branch.jsx"],"names":["React","useState","useEffect","axios","Branch","username","setUsername","password","setPassword","data","setData","pincode","setPincode","message","setMessage","result","setResult","auth","setAuth","performValidation","length","handleSubmit","event","preventDefault","getData","get","then","res","i","e","target","value","map","item"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect} from \"react\";\nimport axios from \"axios\"\n\nconst Branch = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState([])\n  const [ pincode, setPincode] = useState([])\n  const [ message, setMessage] = useState(\"\")\n  const [ result, setResult] = useState([])\n  const [ auth, setAuth] = useState(true)\n\n  function performValidation() {\n    return username.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getData()    \n  }\n\n  const getData =()=>{\n     axios.get(\"https://json-server-pavithra.herokuapp.com/branchlogin\")\n    .then((res)=>{\n      setData(res.data)  \n      for(let i =0; i<data.length; i++)\n      {\n          if(data[i][\"BranchName\"] == username && data[i][\"Pincodecovered\"] == password)\n          {\n              setAuth(true)\n              break;\n          }\n      }\n  \n  })\n}\n\n\n  return (\n    <>\n      !auth{ \n    <div>\n   <form onSubmit={handleSubmit}>\n        <label>Username</label>\n        <input\n          autoFocus\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        /> <br/><br/>\n        <label>Password</label>\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n    <br/><br/>\n        <button\n          block\n          bsSize=\"large\"\n          disabled={!performValidation()}\n          type=\"submit\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n}\n  :  {\n    result&&result.map((item)=><p>{item[\"BranchName\"]}</p>)\n    }\n    </>\n  );\n};\n\nexport default Branch;\n"]},"metadata":{},"sourceType":"module"}